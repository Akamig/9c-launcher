name: build
on:
  push: []
  pull_request: []

jobs:
  # 론처 빌드
  build-launcher:
    strategy:
      matrix:
        os:
          - macos-10.15
          - windows-2019
    runs-on: ${{ matrix.os }}
    steps:
      # 클론
      - uses: actions/checkout@v2
        if: github.event_name != 'pull_request'
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true
          lfs: false
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.pull_request.head.sha }}
          token: ${{ secrets.GH_TOKEN }}
          submodules: true
          lfs: false
      # Node.js 설치
      - uses: actions/setup-node@v1
        with:
          node-version: "14"
      # 의존성 설치
      - run: npm install --loglevel verbose
      # 코드 스타일 린트
      - run: npx pretty-quick --check --branch "${{ github.base_ref }}"
        if: github.event_name == 'pull_request'
      # 빌드
      - run: npm run build-prod
      - if: runner.os == 'Windows'
        run: 7z a -r "../9c-launcher-dist-${{ matrix.os }}.7z" *
        working-directory: dist/
      - if: runner.os != 'Windows'
        run: tar cvfj "../9c-launcher-dist-${{ matrix.os }}.tar.bz2" *
        working-directory: dist/
      - uses: actions/upload-artifact@v2
        with:
          path: 9c-launcher-dist-${{ matrix.os }}.*
      # 패키지
      - run: npm run pack
      - if: runner.os == 'Windows'
        run: 7z a -r "../9c-launcher-pack-${{ matrix.os }}.7z" *
        working-directory: pack/
      - if: runner.os != 'Windows'
        run: tar cvfj "../9c-launcher-pack-${{ matrix.os }}.tar.bz2" *
        working-directory: pack/
      - uses: actions/upload-artifact@v2
        with:
          path: 9c-launcher-pack-${{ matrix.os }}.*

  # 헤들리스 (스탠드얼론) 빌드
  build-headless:
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        os:
          - macos-10.15
          - windows-2019
    runs-on: ${{ matrix.os }}
    steps:
      # 클론
      - uses: actions/checkout@v2
        if: github.event_name != 'pull_request'
        with:
          submodules: true
          lfs: false
          token: ${{ secrets.GH_TOKEN }}
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.pull_request.head.sha }}
          submodules: true
          lfs: false
          token: ${{ secrets.GH_TOKEN }}
      # .NET Core SDK 설치
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"
      # 빌드
      # 그냥 build-headless 돌려도 되지만 그러면 run-script-os 의존성이 필요하고,
      # 그걸 설치하려고 npm install 돌리기엔 의존성이 너무 많음.
      - if: runner.os == 'Windows'
        run: npm run build-headless:windows
      - if: runner.os != 'Windows'
        run: npm run build-headless:darwin
      # 아티팩트
      - if: runner.os == 'Windows'
        run: 7z a -r "9c-headless-${{ matrix.os }}.7z" publish
        working-directory: dist
      - if: runner.os != 'Windows'
        run: tar cvfj "9c-headless-${{ matrix.os }}.tar.bz2" publish
        working-directory: dist
      - uses: actions/upload-artifact@v2
        with:
          path: dist/9c-headless-${{ matrix.os }}.*

  # 번들
  bundle:
    if: github.event_name != 'pull_request'
    needs: [build-launcher, build-headless]
    runs-on: macos-10.15
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: .
      - run: mkdir dist/
      - run: |
          tar xvfj artifact/9c-launcher-pack-macos-*.tar.bz2
          mv NineChronicles-darwin-x64 macOS
          pushd macOS/
          tar xvfj ../artifact/9c-headless-macos-*.tar.bz2
          GZIP=-9 tar cvfz ../dist/macOS.tar.gz *
          popd
      - run: |
          7z x artifact/9c-launcher-pack-windows-*.7z
          ls -al
          mv NineChronicles-win32-x64 Windows
          pushd Windows/
          7z x ../artifact/9c-headless-windows-*.7z
          7z a -mm=Deflate -mfb=258 -mpass=15 -r ../dist/Windows.zip *
          popd
      - uses: actions/upload-artifact@v2
        with:
          name: 9c
          path: dist/
