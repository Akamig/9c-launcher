name: Release

on:
  push:
    branches:
      - rc-v*
      - release/*
    tags: ["*"]

concurrency:
  group: release

jobs:
  release:
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - m
          - l
          - w

    environment:
      name: ${{ startsWith(github.event.ref, 'refs/tags/') && 'main' || 'internal' }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Copy builder config
        shell: bash
        run: |
          sh scripts/download-codesigner.sh

          if [[ "${{ startsWith(github.event.ref, 'refs/tags/') }}" != true ]]
          then
          timestamp=$(date +%s)
          version=$(jq -r .version package.json | awk -F'.' '{print $1"."$2}')
          jq --arg version "$version.$timestamp" '.version = $version' package.json > tmp.$$.json && mv tmp.$$.json package.json
            jq --arg suffix " Internal" '.productName += $suffix' package.json > tmp.$$.json && mv tmp.$$.json package.json
            jq --arg suffix "Internal" '.name += $suffix' package.json > tmp.$$.json && mv tmp.$$.json package.json
            sed 's/NineChronicles@workspace/NineChroniclesInternal@workspace/g' yarn.lock > temp.txt
            mv temp.txt yarn.lock
            mv ./signing/sandbox_code_sign_tool.properties ./tmp/codesign/conf/code_sign_tool.properties
          fi

      - name: Cache electron-gyp
        uses: actions/cache@v2
        with:
          path: ~/.electron-gyp
          key: ${{ runner.os }}-electron-gyp-${{ hashFiles('**/yarn.lock') }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install
        shell: bash
        run: yarn

      - name: release
        shell: bash
        run: |
          if [[ "${{ startsWith(github.event.ref, 'refs/tags/') }}" == true ]]
          then
            sh ./scripts/release.sh main ${{ matrix.targetPlatform }}
            aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DISTRIBUTION_ID }} --paths "/main/launcher/latest.yml"
            aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DISTRIBUTION_ID }} --paths "/main/launcher/latest-mac.yml"
          else
            sh ./scripts/release.sh internal ${{ matrix.targetPlatform }}
            aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DISTRIBUTION_ID }} --paths "/internal/launcher/latest.yml"
            aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_DISTRIBUTION_ID }} --paths "/internal/launcher/latest-mac.yml"
          fi
          rm -fR ./dist/*-unpacked
          rm -fR ./dist/mac
          rm -fR ./dist/mac-arm64
        env:
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ESIGNER_CREDENTIAL_ID: ${{ secrets.ESIGNER_CREDENTIAL_ID }}
          ESIGNER_USERNAME: ${{ secrets.ESIGNER_USERNAME }}
          ESIGNER_PASSWORD: ${{ secrets.ESIGNER_PASSWORD }}
          ESIGNER_TOTP_SECRET: ${{ secrets.ESIGNER_TOTP_SECRET }}

      - uses: actions/upload-artifact@v3
        with:
          path: dist
          name: Dist-${{ matrix.targetPlatform }}
          retention-days: 3
          if-no-files-found: error
